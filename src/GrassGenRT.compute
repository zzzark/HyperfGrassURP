#pragma kernel Main


// -------------------------------------------------------- // 
#include "GrassCommon.hlsl"


float _PositionScale;
float2 _TextureHalfSize;

Texture2D<float4> _EditGrass;


// [numthreads(128, 1, 1)]
[numthreads(8, 8, 1)]
void Main(uint3 uid : SV_DispatchThreadID)
{
    // // >>> uid offset
    // uint LEFT_TOP = 4;

    // uint2 worldUV = (uint2)(_WorldSpaceCameraPos.xz / _PositionScale + _TextureHalfSize.xy) - LEFT_TOP;
    // uid.xy += worldUV;
    // uid.xy = fmod(uid.xy, _TextureHalfSize*2);
    // // <<< 

    float4 xyzw = _EditGrass[uid.xy];
    if (xyzw.w < 0.0+0.1) return;  // 0.0, grass cut
    // if (xyzw.w < 0.5+0.1) return;  // 0.5, grass burt

    float3 positionWS = xyzw.xyz + 
        _PositionScale * float3((float)uid.x - _TextureHalfSize.x, 0.0, (float)uid.y - _TextureHalfSize.y);

    float4 positionNDC;
    if (FrustumCull(positionWS, positionNDC)) return;
    if (HiZCull(positionNDC)) return;
    GrassGen(positionWS, uid);
}
